extends ../common/base

block content
  // start page wrapper
  .page-wrapper
    .page-content
      .page-breadcrumb.d-none.d-sm-flex.align-items-center.mb-3
        .breadcrumb-title.pe-3 Stock Register
        .ps-3
          nav(aria-label='breadcrumb')
            ol.breadcrumb.mb-0.p-0
              li.breadcrumb-item
                a(href='javascript:;')
                  i.bx.bx-home-alt
              li.breadcrumb-item.active(aria-current='page') View Stock Ledger
      // end breadcrumb
      .row
        .col-xl-12.mx-auto 
          .card.border-top.border-0.border-4.border-primary
            .card-body.p-4
              .row
                .col-lg-12
                  .col-xl
                    .card
                      .card-body
                        .form-body-child
                          form#saleEntryForm
                            .row
                              .col-sm-3.form-group
                                label.form-label(for='itemName') Item Name
                                input#itemName.form-control(type='text' value=`${stockLedger.item.name}` disabled)
                              .col-sm-3.form-group
                                label.form-label(for='currentQty') Current Qty
                                input#currentQty.form-control(type='text' value=`${stockLedger.currentQty}` disabled)
                              .col-sm-3.form-group
                                label.form-label(for='movingAverage') Cost Price
                                - let movingAverage = (stockLedger.movingAverage * 1).toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
                                input#movingAverage.form-control(type='text' value=`${movingAverage}` disabled)
                              .col-sm-3.form-group
                                label.form-label(for='stockValue') Stock Value
                                br
                                - let stockValue = (stockLedger.currentQty * 1 * stockLedger.movingAverage).toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
                                input#stockValue.form-control(value=`${stockValue}` disabled) 
              .row
                .col-lg-12
                  .col-xl  
                    .card.radius-10.w-100
                      .card-body
                        .table-responsive
                          table#myTable.table.align-middle.mb-0.table-hover
                            thead.table-light
                              tr
                                th ID
                                th Date &amp; Time
                                th Transaction Type
                                th.text-end Qty
                                //- th.text-end Rate
                                th.text-end Updated Qty
                            tbody
                              each entry in stockLedger.stockEntries
                                tr
                                  td #{entry.id}
                                  td
                                    .d-flex.align-items-center
                                      .ms-2
                                        - let dateString = moment(entry.createdAt).format('DD-MM-YYYY');
                                        - let timeString = moment(entry.createdAt).format('hh:mm:ss A');
                                        h6.mb-1.font-14 #{dateString}
                                        p.mb-0.font-13.text-secondary #{timeString}
                                  td 
                                    .d-flex.align-items-center
                                      .ms-2
                                        h6.mb-1.font-14 #{entry.type}
                                        p.mb-0.font-13.text-secondary 
                                          - let resource = ''
                                          - if (entry.type === 'Sale') resource = 'sales'
                                          - if (entry.type === 'Sale Return') resource = 'saleReturns'
                                          - if (entry.type === 'Purchase') resource = 'purchases'
                                          - if (entry.type === 'Purchase Return') resource = 'purchaseReturns'
                                          - if (entry.type === 'Order') resource = 'orders'
                                          - if(resource)
                                            a(href=`/${resource}/${entry.referenceId}/show`) Reference # #{entry.referenceId}
                                  td
                                    .text-end #{entry.qty}
                                  //- td
                                  //-   - let rate = (entry.rate * 1).toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
                                  //-   .text-end #{rate}
                                  td
                                    .text-end #{entry.updatedQty}
              .row
                .col-lg-12
                  .col-xl
                    form.form-body
                      button.btn.btn-primary.px-5(type='submit') Back
  script(src='/assets/js/custom/stockLedgers/showStockLedger.js')